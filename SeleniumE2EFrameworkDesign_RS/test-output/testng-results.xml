<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-02T15:57:23Z" name="Suite" finished-at="2023-01-02T15:57:42Z" duration-ms="18959">
    <groups>
    </groups>
    <test started-at="2023-01-02T15:57:23Z" name="StandaloneTest_2" finished-at="2023-01-02T15:57:33Z" duration-ms="9286">
      <class name="testPackage.Tests.StandaloneTest_2">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testPackage.Tests.StandaloneTest_2@75e01201]" started-at="2023-01-02T15:57:24Z" name="launchApplication" finished-at="2023-01-02T15:57:31Z" duration-ms="7614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="testMethod()[pri:0, instance:testPackage.Tests.StandaloneTest_2@75e01201]" started-at="2023-01-02T15:57:31Z" name="testMethod" finished-at="2023-01-02T15:57:31Z" duration-ms="11" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at testPackage.Tests.StandaloneTest_2.testMethod(StandaloneTest_2.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testPackage.Tests.StandaloneTest_2@75e01201]" started-at="2023-01-02T15:57:32Z" name="tearDown" finished-at="2023-01-02T15:57:33Z" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testPackage.Tests.StandaloneTest_2 -->
    </test> <!-- StandaloneTest_2 -->
    <test started-at="2023-01-02T15:57:23Z" name="StandaloneTest_3" finished-at="2023-01-02T15:57:33Z" duration-ms="9319">
      <class name="testPackage.Tests.StandaloneTest_3">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testPackage.Tests.StandaloneTest_3@15eebbff]" started-at="2023-01-02T15:57:24Z" name="launchApplication" finished-at="2023-01-02T15:57:31Z" duration-ms="7569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="testMethod()[pri:0, instance:testPackage.Tests.StandaloneTest_3@15eebbff]" started-at="2023-01-02T15:57:31Z" name="testMethod" finished-at="2023-01-02T15:57:31Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testPackage.Tests.StandaloneTest_3@15eebbff]" started-at="2023-01-02T15:57:31Z" name="tearDown" finished-at="2023-01-02T15:57:33Z" duration-ms="1693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testPackage.Tests.StandaloneTest_3 -->
    </test> <!-- StandaloneTest_3 -->
    <test started-at="2023-01-02T15:57:23Z" name="StandaloneTest_1" finished-at="2023-01-02T15:57:42Z" duration-ms="18959">
      <class name="testPackage.Tests.StandaloneTest_1">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testPackage.Tests.StandaloneTest_1@60f7cc1d]" started-at="2023-01-02T15:57:24Z" name="launchApplication" finished-at="2023-01-02T15:57:31Z" duration-ms="7474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="testMethod()[pri:0, instance:testPackage.Tests.StandaloneTest_1@60f7cc1d]" started-at="2023-01-02T15:57:31Z" name="testMethod" finished-at="2023-01-02T15:57:37Z" duration-ms="6068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testPackage.Tests.StandaloneTest_1@60f7cc1d]" started-at="2023-01-02T15:57:37Z" name="tearDown" finished-at="2023-01-02T15:57:37Z" duration-ms="248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testPackage.Tests.StandaloneTest_1@60f7cc1d]" started-at="2023-01-02T15:57:37Z" name="launchApplication" finished-at="2023-01-02T15:57:40Z" duration-ms="2651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="testMethod3()[pri:0, instance:testPackage.Tests.StandaloneTest_1@60f7cc1d]" started-at="2023-01-02T15:57:40Z" name="testMethod3" finished-at="2023-01-02T15:57:40Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testPackage.Tests.StandaloneTest_1@60f7cc1d]" started-at="2023-01-02T15:57:40Z" name="tearDown" finished-at="2023-01-02T15:57:40Z" duration-ms="279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testPackage.Tests.StandaloneTest_1@60f7cc1d]" started-at="2023-01-02T15:57:40Z" name="launchApplication" finished-at="2023-01-02T15:57:42Z" duration-ms="1928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="testMethod2()[pri:0, instance:testPackage.Tests.StandaloneTest_1@60f7cc1d]" started-at="2023-01-02T15:57:42Z" name="testMethod2" finished-at="2023-01-02T15:57:42Z" depends-on-methods="testPackage.Tests.StandaloneTest_1.testMethod" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testPackage.Tests.StandaloneTest_1@60f7cc1d]" started-at="2023-01-02T15:57:42Z" name="tearDown" finished-at="2023-01-02T15:57:42Z" duration-ms="262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testPackage.Tests.StandaloneTest_1 -->
    </test> <!-- StandaloneTest_1 -->
  </suite> <!-- Suite -->
</testng-results>
